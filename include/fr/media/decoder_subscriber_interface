/**
 * Copyright 2018 Bruce Ide
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 * This is a subscriber interface for decoder. When you call 
 * decoder->add(subscriber), decoder will just scall
 * subscriber->subscribe(this), and the subscriber can
 * instrument the callbacks as it sees fit.
 */

#ifndef _HPP_FR_MEDIA_DECODER_SUBSCRIBER_INTERFACE
#define _HPP_FR_MEDIA_DECODER_SUBSCRIBER_INTERFACE

extern "C" {
#include <libavformat/avformat.h>
#include <libavcodec/avcodec.h>
#include <libavutil/avutil.h>
}

#include <boost/log/trivial.hpp>
#include <functional>
#include <memory>

namespace fr {
  
  namespace media {
    class decoder_interface;

    class decoder_subscriber_interface {
      
    public:
      typedef std::shared_ptr<decoder_subscriber_interface> pointer;

      virtual ~decoder_subscriber_interface()
      {
      }

      virtual void subscribe(decoder_interface *to) = 0;
      
    };
    
  }
}

#endif
