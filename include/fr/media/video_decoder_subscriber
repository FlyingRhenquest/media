/**
 * Copyright 2018 Bruce Ide
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 * Subscribes to thee video_available callback in decoder. This sets
 * everything up so all you have to do is subclass this and implement
 * the callback function.
 *
 */

#ifndef _HPP_FR_MEDIA_VIDEO_SUBSCRIBER
#define _HPP_FR_MEDIA_VIDEO_SUBSCRIBER

#include <fr/media/decoder_subscriber_interface>
#include <fr/media/decoder_interface>

namespace fr {

  namespace media {

    class video_decoder_subscriber : public decoder_subscriber_interface {

      boost::signals2::connection subscription;
      
    public:

      virtual ~video_decoder_subscriber()
      {
	subscription.disconnect();
      }
      
      virtual void video_available_cb(AVFrame *frame) = 0;
      
      void subscribe(decoder_interface *that) override
      {
	subscription = that->video_available.connect(std::bind(&video_decoder_subscriber::video_available_cb, this, std::placeholders::_1));
      }
      
    };
    
  }
}

#endif
