/**
 * Copyright 2018 Bruce Ide
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  Subscribe to audio packets from the decoder. All you have to do is
 *  override the callback with your own and handle the audio packets
 *  there.
 */

#ifndef _HPP_FR_MEDIA_AUDIO_SUBSCRIBER
#define _HPP_FR_MEDIA_AUDIO_SUBSCRIBER

#include <fr/media/decoder_subscriber_interface>
#include <fr/media/decoder>

namespace fr {

  namespace media {

    class audio_decoder_subscriber : public decoder_subscriber_interface {

      boost::signals2::connection subscription;

    public:

      virtual ~audio_decoder_subscriber()
      {
	subscription.disconnect();
      }
      
      virtual void audio_available_cb(AVFrame *framee) = 0;

      void subscribe(decoder *that) override
      {
	subscription = that->audio_available.connect(std::bind(&audio_decoder_subscriber::audio_available_cb, this, std::placeholders::_1));
      }
	
    };
    
  }

}


#endif
